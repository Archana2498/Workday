<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sn_ex_sp_action_type">
    <sn_ex_sp_action_type action="INSERT_OR_UPDATE">
        <active>true</active>
        <client_parameters>action</client_parameters>
        <client_script><![CDATA[var comment = "";
var title ="${reject_request_heading}" ;
var	message = "${Provide a reason for rejecting this request}";
var	primaryButtonLabel = "${Reject}";
if(action === 'approve'){
	title = "${Approve request}";
	message = "${Provide a reason for approving this request}";
	primaryButtonLabel = "${Approve}";
} 
var answer = spModal.open({
    title: title,
    message: message,
    input: true,
    value: comment,
    buttons: [{
            label: "${Cancel}",
            cancel: true
        },
        {
            label: primaryButtonLabel,
            primary: true
        }
    ]
});]]></client_script>
        <name>Workday Update with comments</name>
        <reverse_execution>true</reverse_execution>
        <server_parameters>State,sys_id</server_parameters>
        <server_script><![CDATA[var serviceName='time_off_request_to_dos';
var infoMessage = gs.getMessage("You have approved this request.");
var errorMessage = gs.getMessage("Request could not be approved try again.");
var wd_id = '';
var outputs = '';
//var approvalHelper=new WorkdayApprovalToDosHelperSNC();
gs.info('line 7 table name'+WorkdayApprovalToDosHelperSNC.Workday_Approval_Table_Name[serviceName]);
var requestRecord = new GlideRecord(WorkdayApprovalToDosHelperSNC.Workday_Approval_Table_Name[serviceName]);
requestRecord.addQuery('sys_id', sys_id);
requestRecord.query();
if (requestRecord.next()) {
    wd_id = requestRecord.getValue('u_workday_id');
    var inputs = {};
    inputs['workday_id'] = wd_id;
    inputs['comment'] = clientScriptOutput;
    if (State == 'approved') {
        outputs = sn_fd.FlowAPI.executeAction('sn_workday_hr_spke.approve_business_process', inputs);
        errorMessage = gs.getMessage(outputs.__action_status__.message + " Request could not be approved try again.");
    } else {
        outputs = sn_fd.FlowAPI.executeAction('sn_workday_hr_spke.reject_business_process', inputs);
        infoMessage = gs.getMessage("You have rejected this request.");
        errorMessage = gs.getMessage(outputs.__action_status__.message + " Request could not be Rejected try again.");
    }
    if (outputs.__action_status__.code == 0) {
        requestRecord.state = State;
		if(State=='approved'){
			requestRecord.workday_status='approved';
		}
		else{
			requestRecord.workday_status='denied';	
		}
        if (requestRecord.update() == null) {
            gs.addErrorMessage(errorMessage);
        } else {
			requestRecord.todo_state='complete';
            gs.addInfoMessage(gs.getMessage("You have approved this request."));
        }
    } else {
        gs.addErrorMessage(errorMessage);
    }
}]]></server_script>
        <sys_class_name>sn_ex_sp_action_type</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-02-28 07:54:39</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_id>fa8880ad8751a91018c742ec0ebb3537</sys_id>
        <sys_mod_count>29</sys_mod_count>
        <sys_name>Workday Update with comments</sys_name>
        <sys_overrides/>
        <sys_package display_value="HR Service Delivery Integration with Workday" source="sn_hr_workday">d4fb8bd8db5b0010205cdf6b5e96190e</sys_package>
        <sys_policy/>
        <sys_scope display_value="HR Service Delivery Integration with Workday">d4fb8bd8db5b0010205cdf6b5e96190e</sys_scope>
        <sys_update_name>sn_ex_sp_action_type_fa8880ad8751a91018c742ec0ebb3537</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-04-10 11:41:20</sys_updated_on>
    </sn_ex_sp_action_type>
</record_update>
